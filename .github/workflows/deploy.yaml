name: Spring Boot CI/CD to AWS EC2

on:
  push:
    branches:
      - dev
  workflow_dispatch:

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/siruchat-app

  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USER: ec2-user
  EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

  PROJECT_DIR_ON_EC2: /home/ec2-user/siruchat-project

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew bootJar

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:latest
            ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_SSH_KEY }}
          script: |
            echo "▶ Pull latest Docker image"
            docker login -u ${{ env.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

            echo "▶ Run docker-compose up on EC2"
            cd /home/ec2-user

            DOCKER_USERNAME=${{ env.DOCKER_USERNAME }} \
            DOCKER_IMAGE_NAME=${{ env.DOCKER_IMAGE_NAME }} \
            MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} \
            MYSQL_USERNAME=${{ secrets.MYSQL_USER }} \
            MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
            MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} \
            RABBITMQ_USERNAME=${{ secrets.RABBITMQ_USERNAME }} \
            RABBITMQ_PASSWORD=${{ secrets.RABBITMQ_PASSWORD }} \
            REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} \
            MONGO_USERNAME=${{ secrets.MONGO_USERNAME }} \
            MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
            MONGO_DB=${{ secrets.MONGO_DB }} \
            REDIS_HOST=${{ secrets.REDIS_HOST }} \
            MYSQL_HOST=${{ secrets.MYSQL_HOST }} \
            RABBITMQ_HOST=${{ secrets.RABBITMQ_HOST }} \
            RABBITMQ_PORT=${{ secrets.RABBITMQ_PORT }} \
            MONGO_HOST=${{ secrets.MONGO_HOST }} \
            GITHUB_SHA=latest \
            JWT_SECRET=${{ secrets.JWT_SECRET }} \
            docker-compose -f compose.yaml up -d --build siruchat